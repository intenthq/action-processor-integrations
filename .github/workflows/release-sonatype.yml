name: Release to Sonatype

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release-sonatype:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # We need to unshallow to allow git describe work with last tag
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: "temurin"
      - uses: coursier/cache-action@v6
      - id: test
        name: Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sbt test
      - name: Make gpg2 compatible with sbt-ci-release
        # https://github.com/olafurpg/sbt-ci-release/issues/95
        run: |
          mkdir -p ~/.gnupg && chmod 700 ~/.gnupg
          echo use-agent >> ~/.gnupg/gpg.conf
          echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
          echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
          chmod 600 ~/.gnupg/*
          echo RELOADAGENT | gpg-connect-agent
          echo $PGP_SECRET | base64 --decode | gpg --import --no-tty --batch --yes
        env:
          PGP_SECRET: ${{secrets.PGP_SECRET}}
      - id: release-sonatype
        name: Release to Sonatype
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        run: sbt ci-release
      - name: Send slack notification
        uses: act10ns/slack@v2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure() && env.SLACK_WEBHOOK_URL
